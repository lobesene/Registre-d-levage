{
  "contractName": "Fight",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_registerFighting",
      "outputs": [
        {
          "name": "peutcombattre",
          "type": "bool"
        },
        {
          "name": "level",
          "type": "uint256"
        },
        {
          "name": "nbVictoire",
          "type": "uint256"
        },
        {
          "name": "nbDefaite",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBreeder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_registerProp",
      "outputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "nbPets",
          "type": "uint256"
        },
        {
          "name": "feuVert",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setFeuvert",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "prop1",
          "type": "address"
        },
        {
          "name": "prop2",
          "type": "address"
        },
        {
          "name": "_tokenId1",
          "type": "uint256"
        },
        {
          "name": "_tokenId2",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_race",
          "type": "string"
        },
        {
          "name": "_sex",
          "type": "string"
        },
        {
          "name": "_espece",
          "type": "string"
        }
      ],
      "name": "breedAnimal",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "auctionEnd",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBreeder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "auctionEndTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_race",
          "type": "string"
        },
        {
          "name": "_espece",
          "type": "string"
        }
      ],
      "name": "addPet",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proprio",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "deadPet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextTokenId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "highestBidder",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_registerGenes",
      "outputs": [
        {
          "name": "color",
          "type": "string"
        },
        {
          "name": "fur",
          "type": "string"
        },
        {
          "name": "eyes",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "bid",
          "type": "uint256"
        }
      ],
      "name": "betOnAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_registerSex",
      "outputs": [
        {
          "name": "sex",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "biddingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "highestBid",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_registerPet",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "race",
          "type": "string"
        },
        {
          "name": "espece",
          "type": "string"
        },
        {
          "name": "age",
          "type": "uint256"
        },
        {
          "name": "horny",
          "type": "bool"
        },
        {
          "name": "proprietaire",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setHorny",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BreederRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BreederAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PetDied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "HighestBidIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AuctionEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenid1",
          "type": "uint256"
        },
        {
          "name": "tokenid2",
          "type": "uint256"
        }
      ],
      "name": "HasWin",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "bid",
          "type": "uint256"
        }
      ],
      "name": "betOnPet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "adverssaire",
          "type": "uint256"
        }
      ],
      "name": "ToFight",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101f9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146101fe578063052b794d1461027057806307c4bdeb146102d8578063081812fc14610329578063095ea7b3146103a457806310154bad146103ff5780631267331f1461045057806316bb018d146104dd5780631b1dfd39146105365780631b5f226c1461058957806323b872dd14610883578063291d9549146108fe5780632a24f46c1461094f57806338af3eed146109665780633af32abf146109bd57806342842e0e14610a2657806346456c6614610aa15780634b449cba14610af25780634c5a628c14610b1d5780634d4a7a8214610b345780635c78244614610d42578063634cceff14610d875780636352211e14610de25780636cc337fd14610e5d57806370a0823114610ea25780637362d9c814610f0757806375794a3c14610f585780638da5cb5b14610f8357806391f9015714610fda578063a22cb46514611031578063a97fd8881461108e578063b88d4fde1461121a578063bb5f747b1461132c578063c2022e9214611395578063cdad18d7146113da578063d074a38d1461142d578063d57bde7914611458578063d6cd947314611483578063df393bc11461149a578063e5bd82651461166b578063e985e9c5146116be575b600080fd5b34801561020a57600080fd5b506102566004803603602081101561022157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611747565b604051808215151515815260200191505060405180910390f35b34801561027c57600080fd5b506102a96004803603602081101561029357600080fd5b81019080803590602001909291905050506117ae565b604051808515151515815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156102e457600080fd5b50610327600480360360208110156102fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117eb565b005b34801561033557600080fd5b506103626004803603602081101561034c57600080fd5b81019080803590602001909291905050506118be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b057600080fd5b506103fd600480360360408110156103c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061190f565b005b34801561040b57600080fd5b5061044e6004803603602081101561042257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a54565b005b34801561045c57600080fd5b506104896004803603602081101561047357600080fd5b8101908080359060200190929190505050611a74565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390f35b3480156104e957600080fd5b506105206004803603604081101561050057600080fd5b810190808035906020019092919080359060200190929190505050611acb565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050611ad8565b604051808215151515815260200191505060405180910390f35b34801561059557600080fd5b5061086960048036036101008110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561061e57600080fd5b82018360208201111561063057600080fd5b8035906020019184600183028401116401000000008311171561065257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106b557600080fd5b8201836020820111156106c757600080fd5b803590602001918460018302840111640100000000831117156106e957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561074c57600080fd5b82018360208201111561075e57600080fd5b8035906020019184600183028401116401000000008311171561078057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107e357600080fd5b8201836020820111156107f557600080fd5b8035906020019184600183028401116401000000008311171561081757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bdc565b604051808215151515815260200191505060405180910390f35b34801561088f57600080fd5b506108fc600480360360608110156108a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506123c4565b005b34801561090a57600080fd5b5061094d6004803603602081101561092157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123e9565b005b34801561095b57600080fd5b50610964612409565b005b34801561097257600080fd5b5061097b61263d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109c957600080fd5b50610a0c600480360360208110156109e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612663565b604051808215151515815260200191505060405180910390f35b348015610a3257600080fd5b50610a9f60048036036060811015610a4957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612680565b005b348015610aad57600080fd5b50610af060048036036020811015610ac457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126a1565b005b348015610afe57600080fd5b50610b07612774565b6040518082815260200191505060405180910390f35b348015610b2957600080fd5b50610b3261277a565b005b348015610b4057600080fd5b50610d2860048036036060811015610b5757600080fd5b8101908080359060200190640100000000811115610b7457600080fd5b820183602082011115610b8657600080fd5b80359060200191846001830284011164010000000083111715610ba857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c0b57600080fd5b820183602082011115610c1d57600080fd5b80359060200191846001830284011164010000000083111715610c3f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ca257600080fd5b820183602082011115610cb457600080fd5b80359060200191846001830284011164010000000083111715610cd657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612785565b604051808215151515815260200191505060405180910390f35b348015610d4e57600080fd5b50610d8560048036036040811015610d6557600080fd5b81019080803590602001909291908035906020019092919050505061295d565b005b348015610d9357600080fd5b50610de060048036036040811015610daa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612c68565b005b348015610dee57600080fd5b50610e1b60048036036020811015610e0557600080fd5b8101908080359060200190929190505050612cfd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e6957600080fd5b50610ea060048036036040811015610e8057600080fd5b810190808035906020019092919080359060200190929190505050612d7b565b005b348015610eae57600080fd5b50610ef160048036036020811015610ec557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f19565b6040518082815260200191505060405180910390f35b348015610f1357600080fd5b50610f5660048036036020811015610f2a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fa4565b005b348015610f6457600080fd5b50610f6d612fc4565b6040518082815260200191505060405180910390f35b348015610f8f57600080fd5b50610f98612fca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610fe657600080fd5b50610fef612ff0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561103d57600080fd5b5061108c6004803603604081101561105457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050613016565b005b34801561109a57600080fd5b506110c7600480360360208110156110b157600080fd5b8101908080359060200190929190505050613152565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561110f5780820151818401526020810190506110f4565b50505050905090810190601f16801561113c5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561117557808201518184015260208101905061115a565b50505050905090810190601f1680156111a25780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156111db5780820151818401526020810190506111c0565b50505050905090810190601f1680156112085780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561122657600080fd5b5061132a6004803603608081101561123d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156112a457600080fd5b8201836020820111156112b657600080fd5b803590602001918460018302840111640100000000831117156112d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613344565b005b34801561133857600080fd5b5061137b6004803603602081101561134f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061336c565b604051808215151515815260200191505060405180910390f35b3480156113a157600080fd5b506113d8600480360360408110156113b857600080fd5b810190808035906020019092919080359060200190929190505050613389565b005b3480156113e657600080fd5b50611413600480360360208110156113fd57600080fd5b810190808035906020019092919050505061361f565b604051808215151515815260200191505060405180910390f35b34801561143957600080fd5b5061144261364a565b6040518082815260200191505060405180910390f35b34801561146457600080fd5b5061146d613650565b6040518082815260200191505060405180910390f35b34801561148f57600080fd5b50611498613656565b005b3480156114a657600080fd5b506114d3600480360360208110156114bd57600080fd5b8101908080359060200190929190505050613661565b60405180806020018060200180602001878152602001861515151581526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184810384528a818151815260200191508051906020019080838360005b8381101561155d578082015181840152602081019050611542565b50505050905090810190601f16801561158a5780820380516001836020036101000a031916815260200191505b50848103835289818151815260200191508051906020019080838360005b838110156115c35780820151818401526020810190506115a8565b50505050905090810190601f1680156115f05780820380516001836020036101000a031916815260200191505b50848103825288818151815260200191508051906020019080838360005b8381101561162957808201518184015260208101905061160e565b50505050905090810190601f1680156116565780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561167757600080fd5b506116a46004803603602081101561168e57600080fd5b8101908080359060200190929190505050613892565b604051808215151515815260200191505060405180910390f35b3480156116ca57600080fd5b5061172d600480360360408110156116e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613aa9565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60156020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154905084565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561184857600080fd5b6001151561185583612663565b151514151561186357600080fd5b611877826012613b3d90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f55bd00b3e7d4e854215e58613765da860f485363fcdf5bd6bdbc97fe2b66847a60405160405180910390a25050565b60006118c982613bed565b15156118d457600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061191a82612cfd565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561195757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061199757506119968133613aa9565b5b15156119a257600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611a5d3361336c565b1515611a6857600080fd5b611a7181613c5f565b50565b60186020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b6000808091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151515611b1557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166013600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611bd65760016018600084815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506018600083815260200190815260200160002060020160009054906101000a900460ff169050611bd7565b5b919050565b60008873ffffffffffffffffffffffffffffffffffffffff166013600089815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611cda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f766f757320646576657a20c3aa7472652070726f70726965746169726520646581526020017f2063657420616e696d616c00000000000000000000000000000000000000000081525060400191505060405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166013600088815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611dd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f766f757320646576657a20c3aa7472652070726f70726965746169726520646581526020017f2063657420616e696d616c00000000000000000000000000000000000000000081525060400191505060405180910390fd5b600115156014600089815260200190815260200160002060040160009054906101000a900460ff161515148015611e345750600115156014600088815260200190815260200160002060040160009054906101000a900460ff161515145b8015611e675750600115156018600089815260200190815260200160002060020160009054906101000a900460ff161515145b8015611e9a5750600115156018600088815260200190815260200160002060020160009054906101000a900460ff161515145b156123b7578873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611f0457508773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156123b6576016600088815260200190815260200160002060166000600854815260200190815260200160002060008201816000019080546001816001161561010002031660029004611f5892919061460a565b5060018201816001019080546001816001161561010002031660029004611f8092919061460a565b5060028201816002019080546001816001161561010002031660029004611fa892919061460a565b509050506121ad600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120455780601f1061201a57610100808354040283529160200191612045565b820191906000526020600020905b81548152906001019060200180831161202857829003601f168201915b5050505050601460008a81526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120f45780601f106120c9576101008083540402835291602001916120f4565b820191906000526020600020905b8154815290600101906020018083116120d757829003601f168201915b5050505050601460008a81526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121a35780601f10612178576101008083540402835291602001916121a3565b820191906000526020600020905b81548152906001019060200180831161218657829003601f168201915b5050505050612785565b506123af600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122475780601f1061221c57610100808354040283529160200191612247565b820191906000526020600020905b81548152906001019060200180831161222a57829003601f168201915b5050505050601460008a81526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122f65780601f106122cb576101008083540402835291602001916122f6565b820191906000526020600020905b8154815290600101906020018083116122d957829003601f168201915b5050505050601460008a81526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123a55780601f1061237a576101008083540402835291602001916123a5565b820191906000526020600020905b81548152906001019060200180831161238857829003601f168201915b5050505050612785565b90506123b8565b5b5b98975050505050505050565b6123ce3382613cb9565b15156123d957600080fd5b6123e4838383613d4e565b505050565b6123f23361336c565b15156123fd57600080fd5b61240681613f15565b50565b600c544210151515612483576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f41756374696f6e206e6f742079657420656e6465642e0000000000000000000081525060200191505060405180910390fd5b601060009054906101000a900460ff1615151561252e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f61756374696f6e456e642068617320616c7265616479206265656e2063616c6c81526020017f65642e000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001601060006101000a81548160ff0219169083151502179055507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e54604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000612679826006613f6f90919063ffffffff16565b9050919050565b61269c8383836020604051908101604052806000815250613344565b505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156126fe57600080fd5b6001151561270b83612663565b151514151561271957600080fd5b61272d82601261400390919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f2d5cebad2a7f0f074c4d2e6d56e39003468b1a87800ecce7ccc12827a47de0e660405160405180910390a25050565b600c5481565b612783336140b2565b565b60006001151561279433612663565b15151415156127a257600080fd5b3360136000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360146000600854815260200190815260200160002060040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836014600060085481526020019081526020016000206000019080519060200190612879929190614691565b508260146000600854815260200190815260200160002060010190805190602001906128a6929190614691565b508160146000600854815260200190815260200160002060020190805190602001906128d3929190614691565b506000601460006008548152602001908152602001600020600301819055503360136000600854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160085401600881905550600190509392505050565b3373ffffffffffffffffffffffffffffffffffffffff16601a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612a7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260438152602001807f766f7573206e6520706f7576657a2070617320666169726520636f6d6261747481526020017f726520756e20616e696d616c20717569206e2765737420706173206c6520766f81526020017f747265000000000000000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b600115156015600084815260200190815260200160002060000160009054906101000a900460ff161515141515612b44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001807f20766f74726520616e696d616c206e276573742070617320696e73637269742081526020017f64616e73206c6520726567697374726520646520636f6d62617400000000000081525060400191505060405180910390fd5b601560008281526020019081526020016000206001015460156000848152602001908152602001600020600101541415612c6457600115156015600083815260200190815260200160002060000160009054906101000a900460ff161515141515612c63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260438152602001807f766f7573206e6520706f7576657a2070617320666169726520636f6d6261747481526020017f726520756e20616e696d616c20717569206e2765737420706173206c6520766f81526020017f747265000000000000000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b5b5050565b612c94600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261410c565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5691c23761c54f62406d00fa0c93278f1bab9e0ab38abee5ce86d2c33743819c60405160405180910390a25050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612d7257600080fd5b80915050919050565b600c544211151515612df5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f41756374696f6e20616c726561647920656e6465642e0000000000000000000081525060200191505060405180910390fd5b601960008381526020019081526020016000206000013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050601960008381526020019081526020016000206001018190806001815401808255809150509060018203906000526020600020016000909192909190915055508060196000848152602001908152602001600020600201540360196000848152602001908152602001600020600201819055508060196000848152602001908152602001600020600301540160196000848152602001908152602001600020600301819055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612f5657600080fd5b612f9d600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614251565b9050919050565b612fad3361336c565b1515612fb857600080fd5b612fc18161425f565b50565b60085481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561305157600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6016602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131fe5780601f106131d3576101008083540402835291602001916131fe565b820191906000526020600020905b8154815290600101906020018083116131e157829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561329c5780601f106132715761010080835404028352916020019161329c565b820191906000526020600020905b81548152906001019060200180831161327f57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561333a5780601f1061330f5761010080835404028352916020019161333a565b820191906000526020600020905b81548152906001019060200180831161331d57829003601f168201915b5050505050905083565b61334f8484846123c4565b61335b848484846142b9565b151561336657600080fd5b50505050565b6000613382826005613f6f90919063ffffffff16565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166013600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156133f757600080fd5b600c544211151515613471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f41756374696f6e20616c726561647920656e6465642e0000000000000000000081525060200191505060405180910390fd5b600e54811115156134ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865726520616c7265616479206973206120686967686572206269642e000081525060200191505060405180910390fd5b6000600e5414151561356857600e5460116000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b33600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600e819055507ff4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad3003382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60176020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b600f5481565b600e5481565b61365f33613f15565b565b6014602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561370d5780601f106136e25761010080835404028352916020019161370d565b820191906000526020600020905b8154815290600101906020018083116136f057829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156137ab5780601f10613780576101008083540402835291602001916137ab565b820191906000526020600020905b81548152906001019060200180831161378e57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138495780601f1061381e57610100808354040283529160200191613849565b820191906000526020600020905b81548152906001019060200180831161382c57829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156138cf57600080fd5b600115156138dc33612663565b1515141515613953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f766f7573206e27c3aa746573207061732077686974656c697374c3a90000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166013600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613a4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001807f766f757320646576657a20c3aa747265206c652070726f707269c3a97461697281526020017f65206465206c27616e696d616c0000000000000000000000000000000000000081525060400191505060405180910390fd5b60016014600084815260200190815260200160002060040160006101000a81548160ff0219169083151502179055506014600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613b7957600080fd5b613b838282613f6f565b151515613b8f57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b613c73816006613b3d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b600080613cc583612cfd565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613d3457508373ffffffffffffffffffffffffffffffffffffffff16613d1c846118be565b73ffffffffffffffffffffffffffffffffffffffff16145b80613d455750613d448185613aa9565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16613d6e82612cfd565b73ffffffffffffffffffffffffffffffffffffffff16141515613d9057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515613dcc57600080fd5b613dd5816144dc565b613e1c600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061459c565b613e63600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206145bf565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b613f2981600661400390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515613fac57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561403f57600080fd5b6140498282613f6f565b151561405457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6140c681600561400390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b8173ffffffffffffffffffffffffffffffffffffffff1661412c82612cfd565b73ffffffffffffffffffffffffffffffffffffffff1614151561414e57600080fd5b614157816144dc565b61419e600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061459c565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600081600001549050919050565b614273816005613b3d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b60006142da8473ffffffffffffffffffffffffffffffffffffffff166145d5565b15156142e957600190506144d4565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156143e05780820151818401526020810190506143c5565b50505050905090810190601f16801561440d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561442f57600080fd5b505af1158015614443573d6000803e3d6000fd5b505050506040513d602081101561445957600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156145995760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6145b4600182600001546145e890919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b60008282111515156145f957600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106146435780548555614680565b8280016001018555821561468057600052602060002091601f016020900482015b8281111561467f578254825591600101919060010190614664565b5b50905061468d9190614711565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106146d257805160ff1916838001178555614700565b82800160010185558215614700579182015b828111156146ff5782518255916020019190600101906146e4565b5b50905061470d9190614711565b5090565b61473391905b8082111561472f576000816000905550600101614717565b5090565b9056fea165627a7a72305820a1ca1827e5b108a07a3c37c3ff59f2416472b4d0944bae0f344346d0a4b27c8f0029",
  "sourceMap": "56:1557:1:-;;;91:99;8:9:-1;5:2;;;30:1;27;20:12;5:2;91:99:1;640:40:6;237:10;659:20;;640:18;;;:40;;;:::i;:::-;1972::9;1229:10;1991:20;;1972:18;;;:40;;;:::i;:::-;471:30:2;490:10;471:18;;;:30;;;:::i;:::-;1852:42:0;1844:5;;:50;;;;;;;;;;;;;;;;;;1919:1;1905:11;:15;;;;1938:4;1931;:11;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2032:5;2024;;:13;;;;;;;;;;;;;;;;;;2048:58;2063:42;2048:14;;;:58;;;:::i;:::-;2117;2132:42;2117:14;;;:58;;;:::i;:::-;2186:65;2200:5;;;;;;;;;;;2206:42;2249:1;2186:13;;;:65;;;:::i;:::-;56:1557:1;;990:158:6;1080:10;1065:25;;:11;:25;;;;;1057:34;;;;;;;;1137:4;1101:20;:33;1122:11;1101:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;990:158;:::o;961:143:2:-;1025:29;1046:7;1025:16;:20;;;;;;:29;;;;;:::i;:::-;1089:7;1069:28;;;;;;;;;;;;961:143;:::o;886:108:3:-;562:28:2;579:10;562:16;;;:28;;;:::i;:::-;554:37;;;;;;;;963:24:3;979:7;963:15;;;:24;;;:::i;:::-;886:108;:::o;9846:362:9:-;9959:4;9939:24;;:16;9947:7;9939;;;:16;;;:::i;:::-;:24;;;9931:33;;;;;;;;9996:1;9982:16;;:2;:16;;;;9974:25;;;;;;;;10010:23;10025:7;10010:14;;;:23;;;:::i;:::-;10044:35;:17;:23;10062:4;10044:23;;;;;;;;;;;;;;;:33;;;;;:35;;;:::i;:::-;10089:33;:17;:21;10107:2;10089:21;;;;;;;;;;;;;;;:31;;;;;:33;;;:::i;:::-;10156:2;10133:11;:20;10145:7;10133:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10193:7;10189:2;10174:27;;10183:4;10174:27;;;;;;;;;;;;9846:362;;;:::o;261:181:4:-;356:1;337:21;;:7;:21;;;;329:30;;;;;;;;378:18;382:4;388:7;378:3;;;:18;;;:::i;:::-;377:19;369:28;;;;;;;;431:4;408;:11;;:20;420:7;408:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;261:181;;:::o;615:123:2:-;679:4;702:29;723:7;702:16;:20;;;;;;:29;;;;;:::i;:::-;695:36;;615:123;;;:::o;1211:134:3:-;1272:26;1290:7;1272:13;:17;;;;;;:26;;;;;:::i;:::-;1330:7;1313:25;;;;;;;;;;;;1211:134;:::o;2600:177:9:-;2655:7;2674:13;2690:11;:20;2702:7;2690:20;;;;;;;;;;;;;;;;;;;;;2674:36;;2745:1;2728:19;;:5;:19;;;;2720:28;;;;;;;;2765:5;2758:12;;;2600:177;;;:::o;11244:171::-;11343:1;11307:38;;:15;:24;11323:7;11307:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11303:106;;;11396:1;11361:15;:24;11377:7;11361:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11303:106;11244:171;:::o;1277:108:5:-;1357:21;1376:1;1357:7;:14;;;:18;;;;;;:21;;;;;:::i;:::-;1340:7;:14;;:38;;;;1277:108;:::o;1182:89::-;1263:1;1245:7;:14;;;:19;;;;;;;;;;;1182:89;:::o;788:162:4:-;860:4;903:1;884:21;;:7;:21;;;;876:30;;;;;;;;923:4;:11;;:20;935:7;923:20;;;;;;;;;;;;;;;;;;;;;;;;;916:27;;788:162;;;;:::o;1213:145:8:-;1271:7;1303:1;1298;:6;;1290:15;;;;;;;;1315:9;1331:1;1327;:5;1315:17;;1350:1;1343:8;;;1213:145;;;;:::o;56:1557:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "56:1557:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:133:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;778:133:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:50:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:50:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1599:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:196;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2456:196:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2456:196:0;;;;;;;;;;;;;;;;;;;;;;3775:151:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3775:151:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3775:151:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3198:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3198:292:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3198:292:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;886:108:3;;;;;;;;;;;;;;;;;;;;;;1750:48:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1750:48:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1750:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:154:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;424:154:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;424:154:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:291:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4044:291:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4044:291:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4343:924;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4343:924:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4343:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4343:924:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4343:924:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4343:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4343:924:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4343:924:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4343:924:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4343:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4343:924:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4343:924:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4343:924:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4343:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4343:924:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4343:924:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4343:924:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4343:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4343:924:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5331:180:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5331:180:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5331:180:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:114:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:114:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1000:114:3;;;;;;;;;;;;;;;;;;;;;;5650:369:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5650:369:0;;;;;;600:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;600:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;763:117:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:117:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;763:117:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6144:132:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6144:132:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6144:132:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2660:203:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2660:203:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2660:203:0;;;;;;;;;;;;;;;;;;;;;;633:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;633:26:0;;;;;;;;;;;;;;;;;;;;;;;864:91:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:91:2;;;;;;2871:633:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2871:633:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2871:633:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2871:633:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2871:633:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2871:633:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2871:633:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2871:633:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2871:633:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2871:633:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2871:633:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2871:633:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2871:633:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2871:633:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2871:633:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;996:612:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;996:612:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;996:612:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3512:128:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3512:128:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3512:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2600:177:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2600:177:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2600:177:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:400:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;586:400:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;586:400:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2222:160:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2222:160:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2222:160:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;744:114:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;744:114:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;744:114:2;;;;;;;;;;;;;;;;;;;;;;524:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:26:0;;;;;;;;;;;;;;;;;;;;;;;497:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;666:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;4218:213:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4218:213:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4218:213:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:42:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1656:42:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1656:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1656:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1656:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1656:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6981:211:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6981:211:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6981:211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6981:211:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6981:211:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6981:211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6981:211:9;;;;;;;;;;;;;;;;;;615:123:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;615:123:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;615:123:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6029:471:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6029:471:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6029:471:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1705:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1705:38:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1705:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;730:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;730:23:0;;;;;;;;;;;;;;;;;;;;;;;701:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;701:22:0;;;;;;;;;;;;;;;;;;;;;;;1120:85:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1120:85:3;;;;;;1554:38:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1554:38:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1554:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1554:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1554:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1554:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3650:386;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3650:386:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3650:386:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4752:145:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4752:145:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4752:145:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:6;848:4;871:20;:33;892:11;871:33;;;;;;;;;;;;;;;;;;;;;;;;;;;864:40;;778:133;;;:::o;1599:50:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2456:196::-;2510:5;;;;;;;;;;;2414:10;2405:19;;:7;:19;;;2397:28;;;;;;;;2559:4;2535:28;;:22;2549:7;2535:13;:22::i;:::-;:28;;;2527:37;;;;;;;;2575:30;2597:7;2575:17;:21;;:30;;;;:::i;:::-;2634:7;2621:21;;;;;;;;;;;;2456:196;;:::o;3775:151:9:-;3834:7;3861:16;3869:7;3861;:16::i;:::-;3853:25;;;;;;;;3895:15;:24;3911:7;3895:24;;;;;;;;;;;;;;;;;;;;;3888:31;;3775:151;;;:::o;3198:292::-;3261:13;3277:16;3285:7;3277;:16::i;:::-;3261:32;;3317:5;3311:11;;:2;:11;;;;3303:20;;;;;;;;3355:5;3341:19;;:10;:19;;;:58;;;;3364:35;3381:5;3388:10;3364:16;:35::i;:::-;3341:58;3333:67;;;;;;;;3438:2;3411:15;:24;3427:7;3411:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3475:7;3471:2;3455:28;;3464:5;3455:28;;;;;;;;;;;;3198:292;;;:::o;886:108:3:-;562:28:2;579:10;562:16;:28::i;:::-;554:37;;;;;;;;963:24:3;979:7;963:15;:24::i;:::-;886:108;:::o;1750:48:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;424:154:1:-;489:7;508:26;552:18;545:25;;;424:154;;;;:::o;4044:291:0:-;4097:4;4142:1;4121:23;;:10;:23;;;;4113:32;;;;;;;;4192:10;4169:33;;:11;:21;4181:8;4169:21;;;;;;;;;;;;;;;;;;;;;:33;;;4165:154;;;4250:4;4218:13;:23;4232:8;4218:23;;;;;;;;;;;:31;;;:36;;;;;;;;;;;;;;;;;;4276:13;:23;4290:8;4276:23;;;;;;;;;;;:31;;;;;;;;;;;;4269:38;;;;4165:154;4044:291;;;;:::o;4343:924::-;4520:4;4570:5;4544:31;;:11;:22;4556:9;4544:22;;;;;;;;;;;;;;;;;;;;;:31;;;4536:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4667:5;4641:31;;:11;:22;4653:9;4641:22;;;;;;;;;;;;;;;;;;;;;:31;;;4633:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4767:4;4734:37;;:12;:23;4747:9;4734:23;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;:78;;;;;4808:4;4775:37;;:12;:23;4788:9;4775:23;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;4734:78;:122;;;;;4852:4;4816:40;;:13;:24;4830:9;4816:24;;;;;;;;;;;:32;;;;;;;;;;;;:40;;;4734:122;:166;;;;;4896:4;4860:40;;:13;:24;4874:9;4860:24;;;;;;;;;;;:32;;;;;;;;;;;;:40;;;4734:166;4730:520;;;4931:5;4919:17;;:10;:17;;;:36;;;;4950:5;4938:17;;:10;:17;;;4919:36;4916:321;;;5005:14;:25;5020:9;5005:25;;;;;;;;;;;4975:14;:27;4990:11;;4975:27;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5049:72;5056:4;5049:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5061:12;:23;5074:9;5061:23;;;;;;;;;;;:28;;5049:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5090:12;:23;5103:9;5090:23;;;;;;;;;;;:30;;5049:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;:72::i;:::-;;5147;5154:4;5147:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5159:12;:23;5172:9;5159:23;;;;;;;;;;;:28;;5147:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5188:12;:23;5201:9;5188:23;;;;;;;;;;;:30;;5147:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;:72::i;:::-;5140:79;;;;4916:321;4730:520;4343:924;;;;;;;;;;;:::o;5331:180:9:-;5421:39;5440:10;5452:7;5421:18;:39::i;:::-;5413:48;;;;;;;;5472:32;5486:4;5492:2;5496:7;5472:13;:32::i;:::-;5331:180;;;:::o;1000:114:3:-;562:28:2;579:10;562:16;:28::i;:::-;554:37;;;;;;;;1080:27:3;1099:7;1080:18;:27::i;:::-;1000:114;:::o;5650:369:0:-;5733:14;;5726:3;:21;;5718:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5794:5;;;;;;;;;;;5793:6;5785:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5883:4;5875:5;;:12;;;;;;;;;;;;;;;;;;5903:39;5916:13;;;;;;;;;;;5931:10;;5903:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;5996:13;;;;;;;;;;;5982:11;;:27;;;;;;;;;;;;;;;;;;5650:369::o;600:26::-;;;;;;;;;;;;;:::o;763:117:3:-;824:4;847:26;865:7;847:13;:17;;:26;;;;:::i;:::-;840:33;;763:117;;;:::o;6144:132:9:-;6230:39;6247:4;6253:2;6257:7;6230:39;;;;;;;;;;;;;:16;:39::i;:::-;6144:132;;;:::o;2660:203:0:-;2717:5;;;;;;;;;;;2414:10;2405:19;;:7;:19;;;2397:28;;;;;;;;2767:4;2743:28;;:22;2757:7;2743:13;:22::i;:::-;:28;;;2735:37;;;;;;;;2783:33;2808:7;2783:17;:24;;:33;;;;:::i;:::-;2847:7;2832:23;;;;;;;;;;;;2660:203;;:::o;633:26::-;;;;:::o;864:91:2:-;915:33;937:10;915:21;:33::i;:::-;864:91::o;2871:633:0:-;2964:4;3017;2988:33;;:25;3002:10;2988:13;:25::i;:::-;:33;;;2980:42;;;;;;;;3060:10;3033:11;:24;3045:11;;3033:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3122:10;3081:12;:25;3094:11;;3081:25;;;;;;;;;;;:38;;;:51;;;;;;;;;;;;;;;;;;3176:5;3143:12;:25;3156:11;;3143:25;;;;;;;;;;;:30;;:38;;;;;;;;;;;;:::i;:::-;;3225:5;3192:12;:25;3205:11;;3192:25;;;;;;;;;;;:30;;:38;;;;;;;;;;;;:::i;:::-;;3276:7;3241:12;:25;3254:11;;3241:25;;;;;;;;;;;:32;;:42;;;;;;;;;;;;:::i;:::-;;3326:1;3294:12;:25;3307:11;;3294:25;;;;;;;;;;;:29;;:33;;;;3365:10;3338:11;:24;3350:11;;3338:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3412:1;3400:11;;:13;3386:11;:27;;;;3492:4;3485:11;;2871:633;;;;;:::o;996:612:1:-;1100:10;1076:34;;:11;:20;1088:7;1076:20;;;;;;;;;;;;;;;;;;;;;:34;;;1068:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:4;1200:46;;:17;:26;1218:7;1200:26;;;;;;;;;;;:40;;;;;;;;;;;;:46;;;1192:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:17;:30;1376:11;1358:30;;;;;;;;;;;:36;;;1322:17;:26;1340:7;1322:26;;;;;;;;;;;:32;;;:72;1319:282;;;1464:4;1418:50;;:17;:30;1436:11;1418:30;;;;;;;;;;;:44;;;;;;;;;;;;:50;;;1410:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:282;996:612;;:::o;3512:128:0:-;3580:20;3586:5;;;;;;;;;;;3592:7;3580:5;:20::i;:::-;3624:5;;;;;;;;;;;3616:14;;;;;;;;;;;;3512:128;;:::o;2600:177:9:-;2655:7;2674:13;2690:11;:20;2702:7;2690:20;;;;;;;;;;;;;;;;;;;;;2674:36;;2745:1;2728:19;;:5;:19;;;;2720:28;;;;;;;;2765:5;2758:12;;;2600:177;;;:::o;586:400:1:-;663:14;;656:3;:21;;647:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;714:15;:24;730:7;714:24;;;;;;;;;;;:32;;752:10;714:49;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;714:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;774:15;:24;790:7;774:24;;;;;;;;;;;:28;;808:3;774:38;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;774:38:1;;;;;;;;;;;;;;;;;;;;;;893:3;858:15;:24;874:7;858:24;;;;;;;;;;;:32;;;:38;823:15;:24;839:7;823:24;;;;;;;;;;;:32;;:73;;;;973:3;940:15;:24;956:7;940:24;;;;;;;;;;;:30;;;:36;907:15;:24;923:7;907:24;;;;;;;;;;;:30;;:69;;;;586:400;;:::o;2222:160:9:-;2277:7;2321:1;2304:19;;:5;:19;;;;2296:28;;;;;;;;2341:34;:17;:24;2359:5;2341:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2334:41;;2222:160;;;:::o;744:114:2:-;562:28;579:10;562:16;:28::i;:::-;554:37;;;;;;;;824:27;843:7;824:18;:27::i;:::-;744:114;:::o;524:26:0:-;;;;:::o;497:20::-;;;;;;;;;;;;;:::o;666:28::-;;;;;;;;;;;;;:::o;4218:213:9:-;4303:10;4297:16;;:2;:16;;;;4289:25;;;;;;;;4361:8;4324:18;:30;4343:10;4324:30;;;;;;;;;;;;;;;:34;4355:2;4324:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4411:2;4384:40;;4399:10;4384:40;;;4415:8;4384:40;;;;;;;;;;;;;;;;;;;;;;4218:213;;:::o;1656:42:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6981:211:9:-;7087:31;7100:4;7106:2;7110:7;7087:12;:31::i;:::-;7136:48;7159:4;7165:2;7169:7;7178:5;7136:22;:48::i;:::-;7128:57;;;;;;;;6981:211;;;;:::o;615:123:2:-;679:4;702:29;723:7;702:16;:20;;:29;;;;:::i;:::-;695:36;;615:123;;;:::o;6029:471:0:-;6127:10;6105:32;;:11;:20;6117:7;6105:20;;;;;;;;;;;;;;;;;;;;;:32;;;;6097:41;;;;;;;;6165:14;;6158:3;:21;;6149:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6230:10;;6224:3;:16;6216:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6303:1;6289:10;;:15;;6285:91;;;6354:10;;6321:14;:29;6336:13;;;;;;;;;;;6321:29;;;;;;;;;;;;;;;;:43;;;;;;;;;;;6285:91;6402:10;6386:13;;:26;;;;;;;;;;;;;;;;;;6436:3;6423:10;:16;;;;6455:35;6475:10;6486:3;6455:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;6029:471;;:::o;1705:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;730:23::-;;;;:::o;701:22::-;;;;:::o;1120:85:3:-;1168:30;1187:10;1168:18;:30::i;:::-;1120:85::o;1554:38:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3650:386::-;3700:4;3746:1;3725:23;;:10;:23;;;;3717:32;;;;;;;;3797:4;3768:33;;:25;3782:10;3768:13;:25::i;:::-;:33;;;3760:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:10;3852:35;;:11;:21;3864:8;3852:21;;;;;;;;;;;;;;;;;;;;;:35;;;3844:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3978:4;3947:12;:22;3960:8;3947:22;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;4000:12;:22;4013:8;4000:22;;;;;;;;;;;:28;;;;;;;;;;;;3993:35;;3650:386;;;:::o;4752:145:9:-;4832:4;4855:18;:25;4874:5;4855:25;;;;;;;;;;;;;;;:35;4881:8;4855:35;;;;;;;;;;;;;;;;;;;;;;;;;4848:42;;4752:145;;;;:::o;261:181:4:-;356:1;337:21;;:7;:21;;;;329:30;;;;;;;;378:18;382:4;388:7;378:3;:18::i;:::-;377:19;369:28;;;;;;;;431:4;408;:11;;:20;420:7;408:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;261:181;;:::o;7386:152:9:-;7443:4;7459:13;7475:11;:20;7487:7;7475:20;;;;;;;;;;;;;;;;;;;;;7459:36;;7529:1;7512:19;;:5;:19;;;;7505:26;;;7386:152;;;:::o;1211:134:3:-;1272:26;1290:7;1272:13;:17;;:26;;;;:::i;:::-;1330:7;1313:25;;;;;;;;;;;;1211:134;:::o;7898:246:9:-;7983:4;7999:13;8015:16;8023:7;8015;:16::i;:::-;7999:32;;8060:5;8049:16;;:7;:16;;;:51;;;;8093:7;8069:31;;:20;8081:7;8069:11;:20::i;:::-;:31;;;8049:51;:87;;;;8104:32;8121:5;8128:7;8104:16;:32::i;:::-;8049:87;8041:96;;;7898:246;;;;:::o;9846:362::-;9959:4;9939:24;;:16;9947:7;9939;:16::i;:::-;:24;;;9931:33;;;;;;;;9996:1;9982:16;;:2;:16;;;;9974:25;;;;;;;;10010:23;10025:7;10010:14;:23::i;:::-;10044:35;:17;:23;10062:4;10044:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10089:33;:17;:21;10107:2;10089:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10156:2;10133:11;:20;10145:7;10133:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10193:7;10189:2;10174:27;;10183:4;10174:27;;;;;;;;;;;;9846:362;;;:::o;1351:142:3:-;1415:29;1436:7;1415:13;:20;;:29;;;;:::i;:::-;1478:7;1459:27;;;;;;;;;;;;1351:142;:::o;788:162:4:-;860:4;903:1;884:21;;:7;:21;;;;876:30;;;;;;;;923:4;:11;;:20;935:7;923:20;;;;;;;;;;;;;;;;;;;;;;;;;916:27;;788:162;;;;:::o;516:184::-;614:1;595:21;;:7;:21;;;;587:30;;;;;;;;635:18;639:4;645:7;635:3;:18::i;:::-;627:27;;;;;;;;688:5;665:4;:11;;:20;677:7;665:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;516:184;;:::o;1110:151:2:-;1177:32;1201:7;1177:16;:23;;:32;;;;:::i;:::-;1246:7;1224:30;;;;;;;;;;;;1110:151;:::o;8919:283:9:-;9013:5;8993:25;;:16;9001:7;8993;:16::i;:::-;:25;;;8985:34;;;;;;;;9030:23;9045:7;9030:14;:23::i;:::-;9064:36;:17;:24;9082:5;9064:24;;;;;;;;;;;;;;;:34;:36::i;:::-;9141:1;9110:11;:20;9122:7;9110:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9187:7;9183:1;9159:36;;9168:5;9159:36;;;;;;;;;;;;8919:283;;:::o;1064:112:5:-;1129:7;1155;:14;;;1148:21;;1064:112;;;:::o;961:143:2:-;1025:29;1046:7;1025:16;:20;;:29;;;;:::i;:::-;1089:7;1069:28;;;;;;;;;;;;961:143;:::o;10736:347:9:-;10857:4;10882:15;:2;:13;;;:15::i;:::-;10881:16;10877:58;;;10920:4;10913:11;;;;10877:58;10945:13;10977:2;10961:36;;;10998:10;11010:4;11016:7;11025:5;10961:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10961:70:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10961:70:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10961:70:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10961:70:9;;;;;;;;;;;;;;;;10945:86;;715:10;11059:16;;11049:26;;;:6;:26;;;;11041:35;;;10736:347;;;;;;;:::o;11244:171::-;11343:1;11307:38;;:15;:24;11323:7;11307:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11303:106;;;11396:1;11361:15;:24;11377:7;11361:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11303:106;11244:171;:::o;1277:108:5:-;1357:21;1376:1;1357:7;:14;;;:18;;:21;;;;:::i;:::-;1340:7;:14;;:38;;;;1277:108;:::o;1182:89::-;1263:1;1245:7;:14;;;:19;;;;;;;;;;;1182:89;:::o;465:616:12:-;525:4;541:12;1040:7;1028:20;1020:28;;1073:1;1066:4;:8;1059:15;;;465:616;;;:::o;1213:145:8:-;1271:7;1303:1;1298;:6;;1290:15;;;;;;;;1315:9;1331:1;1327;:5;1315:17;;1350:1;1343:8;;;1213:145;;;;:::o;56:1557:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.25;\r\nimport \"./Animals.sol\";\r\n\r\n\r\ncontract Fight is Animals {\r\n\r\n    constructor()public{\r\n        // biddingTime=\r\n       //auctionEndTime = now + _biddingTime;\r\n    }\r\n\r\n    struct Bidder{\r\n        address[] parieur;\r\n        uint[] bet;\r\n        uint balance;\r\n        uint stake;\r\n    }\r\n\r\n    mapping(uint256=>Bidder) _registerBidder;\r\n    mapping (uint256 => address) private _tokenOwner;\r\n\r\n    function HasWin(uint256 tokenid1,uint256 tokenid2)public returns(uint256){\r\n        uint256 etablir_un_gagnant;\r\n        return etablir_un_gagnant;\r\n    }\r\n\r\n    function betOnPet(uint256 tokenId, uint bid)public{\r\n        require( now <= auctionEndTime,\"Auction already ended.\");\r\n        _registerBidder[tokenId].parieur.push(msg.sender);\r\n        _registerBidder[tokenId].bet.push(bid);\r\n        _registerBidder[tokenId].balance = _registerBidder[tokenId].balance - bid;\r\n        _registerBidder[tokenId].stake = _registerBidder[tokenId].stake + bid;\r\n\r\n    }\r\n\r\n\r\n    function ToFight(uint256 tokenId, uint256 adverssaire) public{\r\n        require(_tokenOwner[tokenId] == msg.sender,\"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\");\r\n        require(_registerFighting[tokenId].peutcombattre==true,\" votre animal n'est pas inscrit dans le registre de combat\");\r\n        if(_registerFighting[tokenId].level == _registerFighting[adverssaire].level){\r\n            require(_registerFighting[adverssaire].peutcombattre==true,\"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\");\r\n            //return HasWin(tokenId,adverssaire)\r\n        }\r\n    }\r\n\r\n}",
  "sourcePath": "C:/Users/lobes/.vscode/registre/contracts/Fight.sol",
  "ast": {
    "absolutePath": "/C/Users/lobes/.vscode/registre/contracts/Fight.sol",
    "exportedSymbols": {
      "Fight": [
        759
      ]
    },
    "id": 760,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 612,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:1"
      },
      {
        "absolutePath": "/C/Users/lobes/.vscode/registre/contracts/Animals.sol",
        "file": "./Animals.sol",
        "id": 613,
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 611,
        "src": "27:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 614,
              "name": "Animals",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 610,
              "src": "74:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Animals_$610",
                "typeString": "contract Animals"
              }
            },
            "id": 615,
            "nodeType": "InheritanceSpecifier",
            "src": "74:7:1"
          }
        ],
        "contractDependencies": [
          610,
          862,
          971,
          1165,
          1175,
          1848,
          1951
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 759,
        "linearizedBaseContracts": [
          759,
          610,
          971,
          862,
          1848,
          1951,
          1165,
          1175
        ],
        "name": "Fight",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "110:80:1",
              "statements": []
            },
            "documentation": null,
            "id": 619,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "102:2:1"
            },
            "returnParameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "110:0:1"
            },
            "scope": 759,
            "src": "91:99:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Fight.Bidder",
            "id": 630,
            "members": [
              {
                "constant": false,
                "id": 622,
                "name": "parieur",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "222:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 621,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "222:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 625,
                "name": "bet",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "250:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 623,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 624,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "250:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 627,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "271:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 626,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 629,
                "name": "stake",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "294:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 628,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bidder",
            "nodeType": "StructDefinition",
            "scope": 759,
            "src": "198:114:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 634,
            "name": "_registerBidder",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "320:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
              "typeString": "mapping(uint256 => struct Fight.Bidder)"
            },
            "typeName": {
              "id": 633,
              "keyType": {
                "id": 631,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "320:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                "typeString": "mapping(uint256 => struct Fight.Bidder)"
              },
              "valueType": {
                "contractScope": null,
                "id": 632,
                "name": "Bidder",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 630,
                "src": "337:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bidder_$630_storage_ptr",
                  "typeString": "struct Fight.Bidder"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 638,
            "name": "_tokenOwner",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "367:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 637,
              "keyType": {
                "id": 635,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "376:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "367:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 636,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "387:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 652,
              "nodeType": "Block",
              "src": "497:81:1",
              "statements": [
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "name": "etablir_un_gagnant",
                      "nodeType": "VariableDeclaration",
                      "scope": 652,
                      "src": "508:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "508:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "508:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 650,
                    "name": "etablir_un_gagnant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 648,
                    "src": "552:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 651,
                  "nodeType": "Return",
                  "src": "545:25:1"
                }
              ]
            },
            "documentation": null,
            "id": 653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "HasWin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "name": "tokenid1",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "440:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "name": "tokenid2",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "457:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "439:35:1"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "489:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:9:1"
            },
            "scope": 759,
            "src": "424:154:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "636:350:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 661,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2003,
                          "src": "656:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 662,
                          "name": "auctionEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "663:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "656:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41756374696f6e20616c726561647920656e6465642e",
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "678:24:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54854b7ae1c82c7a55a4c0721457d90a50b8592fc3dce7f0d7542ab8aa48a6be",
                          "typeString": "literal_string \"Auction already ended.\""
                        },
                        "value": "Auction already ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54854b7ae1c82c7a55a4c0721457d90a50b8592fc3dce7f0d7542ab8aa48a6be",
                          "typeString": "literal_string \"Auction already ended.\""
                        }
                      ],
                      "id": 660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2004,
                        2005
                      ],
                      "referencedDeclaration": 2005,
                      "src": "647:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "647:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "647:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "752:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "752:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 667,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "714:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 669,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 668,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "730:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "714:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "parieur",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 622,
                        "src": "714:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "714:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "714:49:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 681,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "808:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 676,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "774:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 678,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 677,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "790:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "774:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 625,
                        "src": "774:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "774:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "774:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "774:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "_registerBidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "823:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                            "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                          }
                        },
                        "id": 686,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 685,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 655,
                          "src": "839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "823:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bidder_$630_storage",
                          "typeString": "struct Fight.Bidder storage ref"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 627,
                      "src": "823:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "858:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 690,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 689,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "874:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "858:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "858:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 692,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "893:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "858:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "823:73:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "823:73:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 696,
                          "name": "_registerBidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "907:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                            "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                          }
                        },
                        "id": 698,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 697,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 655,
                          "src": "923:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "907:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bidder_$630_storage",
                          "typeString": "struct Fight.Bidder storage ref"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 629,
                      "src": "907:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 700,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "940:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 702,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 701,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "956:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "940:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "940:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 704,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "973:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "940:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "907:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "907:69:1"
                }
              ]
            },
            "documentation": null,
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "betOnPet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "604:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "name": "bid",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "621:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:27:1"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:0:1"
            },
            "scope": 759,
            "src": "586:400:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "1057:551:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 717,
                            "name": "_tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "1076:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 719,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 718,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "1088:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1076:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 720,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2001,
                            "src": "1100:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1100:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1076:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "766f7573206e6520706f7576657a2070617320666169726520636f6d62617474726520756e20616e696d616c20717569206e2765737420706173206c6520766f747265",
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1111:69:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                          "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                        },
                        "value": "vous ne pouvez pas faire combattre un animal qui n'est pas le votre"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                          "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2004,
                        2005
                      ],
                      "referencedDeclaration": 2005,
                      "src": "1068:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1068:113:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:113:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 727,
                              "name": "_registerFighting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "1200:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                                "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                              }
                            },
                            "id": 729,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 728,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "1218:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1200:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                              "typeString": "struct Animals.Foofighter storage ref"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "peutcombattre",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "1200:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1242:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1200:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "20766f74726520616e696d616c206e276573742070617320696e73637269742064616e73206c6520726567697374726520646520636f6d626174",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1247:60:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a5fb87849d58e1c729c1da223f5295414102fecad82bf17681b374fbb97400",
                          "typeString": "literal_string \" votre animal n'est pas inscrit dans le registre de combat\""
                        },
                        "value": " votre animal n'est pas inscrit dans le registre de combat"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a5fb87849d58e1c729c1da223f5295414102fecad82bf17681b374fbb97400",
                          "typeString": "literal_string \" votre animal n'est pas inscrit dans le registre de combat\""
                        }
                      ],
                      "id": 726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2004,
                        2005
                      ],
                      "referencedDeclaration": 2005,
                      "src": "1192:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1192:116:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:116:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 736,
                          "name": "_registerFighting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1322:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                            "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                          }
                        },
                        "id": 738,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 737,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "1340:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1322:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                          "typeString": "struct Animals.Foofighter storage ref"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "1322:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 740,
                          "name": "_registerFighting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1358:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                            "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                          }
                        },
                        "id": 742,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 741,
                          "name": "adverssaire",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 713,
                          "src": "1376:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1358:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                          "typeString": "struct Animals.Foofighter storage ref"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "1358:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1322:72:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 756,
                  "nodeType": "IfStatement",
                  "src": "1319:282:1",
                  "trueBody": {
                    "id": 755,
                    "nodeType": "Block",
                    "src": "1395:206:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 746,
                                    "name": "_registerFighting",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 115,
                                    "src": "1418:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                                      "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                                    }
                                  },
                                  "id": 748,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 747,
                                    "name": "adverssaire",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 713,
                                    "src": "1436:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1418:30:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                                    "typeString": "struct Animals.Foofighter storage ref"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "peutcombattre",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "1418:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1464:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1418:50:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "766f7573206e6520706f7576657a2070617320666169726520636f6d62617474726520756e20616e696d616c20717569206e2765737420706173206c6520766f747265",
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1469:69:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                                "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                              },
                              "value": "vous ne pouvez pas faire combattre un animal qui n'est pas le votre"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                                "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                              }
                            ],
                            "id": 745,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2004,
                              2005
                            ],
                            "referencedDeclaration": 2005,
                            "src": "1410:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1410:129:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 754,
                        "nodeType": "ExpressionStatement",
                        "src": "1410:129:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ToFight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1013:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "name": "adverssaire",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1030:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:38:1"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:1"
            },
            "scope": 759,
            "src": "996:612:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 760,
        "src": "56:1557:1"
      }
    ],
    "src": "0:1613:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/lobes/.vscode/registre/contracts/Fight.sol",
    "exportedSymbols": {
      "Fight": [
        759
      ]
    },
    "id": 760,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 612,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:1"
      },
      {
        "absolutePath": "/C/Users/lobes/.vscode/registre/contracts/Animals.sol",
        "file": "./Animals.sol",
        "id": 613,
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 611,
        "src": "27:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 614,
              "name": "Animals",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 610,
              "src": "74:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Animals_$610",
                "typeString": "contract Animals"
              }
            },
            "id": 615,
            "nodeType": "InheritanceSpecifier",
            "src": "74:7:1"
          }
        ],
        "contractDependencies": [
          610,
          862,
          971,
          1165,
          1175,
          1848,
          1951
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 759,
        "linearizedBaseContracts": [
          759,
          610,
          971,
          862,
          1848,
          1951,
          1165,
          1175
        ],
        "name": "Fight",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "110:80:1",
              "statements": []
            },
            "documentation": null,
            "id": 619,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "102:2:1"
            },
            "returnParameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "110:0:1"
            },
            "scope": 759,
            "src": "91:99:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Fight.Bidder",
            "id": 630,
            "members": [
              {
                "constant": false,
                "id": 622,
                "name": "parieur",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "222:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 621,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "222:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 625,
                "name": "bet",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "250:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 623,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 624,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "250:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 627,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "271:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 626,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 629,
                "name": "stake",
                "nodeType": "VariableDeclaration",
                "scope": 630,
                "src": "294:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 628,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bidder",
            "nodeType": "StructDefinition",
            "scope": 759,
            "src": "198:114:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 634,
            "name": "_registerBidder",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "320:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
              "typeString": "mapping(uint256 => struct Fight.Bidder)"
            },
            "typeName": {
              "id": 633,
              "keyType": {
                "id": 631,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "320:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                "typeString": "mapping(uint256 => struct Fight.Bidder)"
              },
              "valueType": {
                "contractScope": null,
                "id": 632,
                "name": "Bidder",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 630,
                "src": "337:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bidder_$630_storage_ptr",
                  "typeString": "struct Fight.Bidder"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 638,
            "name": "_tokenOwner",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "367:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 637,
              "keyType": {
                "id": 635,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "376:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "367:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 636,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "387:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 652,
              "nodeType": "Block",
              "src": "497:81:1",
              "statements": [
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "name": "etablir_un_gagnant",
                      "nodeType": "VariableDeclaration",
                      "scope": 652,
                      "src": "508:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "508:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "508:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 650,
                    "name": "etablir_un_gagnant",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 648,
                    "src": "552:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 651,
                  "nodeType": "Return",
                  "src": "545:25:1"
                }
              ]
            },
            "documentation": null,
            "id": 653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "HasWin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "name": "tokenid1",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "440:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "name": "tokenid2",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "457:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "439:35:1"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "489:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:9:1"
            },
            "scope": 759,
            "src": "424:154:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "636:350:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 661,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2003,
                          "src": "656:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 662,
                          "name": "auctionEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "663:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "656:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41756374696f6e20616c726561647920656e6465642e",
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "678:24:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54854b7ae1c82c7a55a4c0721457d90a50b8592fc3dce7f0d7542ab8aa48a6be",
                          "typeString": "literal_string \"Auction already ended.\""
                        },
                        "value": "Auction already ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54854b7ae1c82c7a55a4c0721457d90a50b8592fc3dce7f0d7542ab8aa48a6be",
                          "typeString": "literal_string \"Auction already ended.\""
                        }
                      ],
                      "id": 660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2004,
                        2005
                      ],
                      "referencedDeclaration": 2005,
                      "src": "647:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "647:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "647:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "752:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "752:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 667,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "714:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 669,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 668,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "730:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "714:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "parieur",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 622,
                        "src": "714:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "714:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "714:49:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 681,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "808:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 676,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "774:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 678,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 677,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "790:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "774:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 625,
                        "src": "774:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "774:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "774:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "774:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 684,
                          "name": "_registerBidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "823:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                            "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                          }
                        },
                        "id": 686,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 685,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 655,
                          "src": "839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "823:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bidder_$630_storage",
                          "typeString": "struct Fight.Bidder storage ref"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 627,
                      "src": "823:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "858:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 690,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 689,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "874:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "858:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "858:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 692,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "893:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "858:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "823:73:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "823:73:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 696,
                          "name": "_registerBidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "907:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                            "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                          }
                        },
                        "id": 698,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 697,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 655,
                          "src": "923:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "907:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bidder_$630_storage",
                          "typeString": "struct Fight.Bidder storage ref"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 629,
                      "src": "907:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 700,
                            "name": "_registerBidder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "940:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bidder_$630_storage_$",
                              "typeString": "mapping(uint256 => struct Fight.Bidder storage ref)"
                            }
                          },
                          "id": 702,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 701,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "956:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "940:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bidder_$630_storage",
                            "typeString": "struct Fight.Bidder storage ref"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 629,
                        "src": "940:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 704,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "973:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "940:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "907:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "907:69:1"
                }
              ]
            },
            "documentation": null,
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "betOnPet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "604:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "name": "bid",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "621:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:27:1"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:0:1"
            },
            "scope": 759,
            "src": "586:400:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "1057:551:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 717,
                            "name": "_tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "1076:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 719,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 718,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "1088:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1076:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 720,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2001,
                            "src": "1100:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1100:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1076:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "766f7573206e6520706f7576657a2070617320666169726520636f6d62617474726520756e20616e696d616c20717569206e2765737420706173206c6520766f747265",
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1111:69:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                          "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                        },
                        "value": "vous ne pouvez pas faire combattre un animal qui n'est pas le votre"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                          "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2004,
                        2005
                      ],
                      "referencedDeclaration": 2005,
                      "src": "1068:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1068:113:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:113:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 727,
                              "name": "_registerFighting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "1200:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                                "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                              }
                            },
                            "id": 729,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 728,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "1218:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1200:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                              "typeString": "struct Animals.Foofighter storage ref"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "peutcombattre",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "1200:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1242:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1200:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "20766f74726520616e696d616c206e276573742070617320696e73637269742064616e73206c6520726567697374726520646520636f6d626174",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1247:60:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3a5fb87849d58e1c729c1da223f5295414102fecad82bf17681b374fbb97400",
                          "typeString": "literal_string \" votre animal n'est pas inscrit dans le registre de combat\""
                        },
                        "value": " votre animal n'est pas inscrit dans le registre de combat"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3a5fb87849d58e1c729c1da223f5295414102fecad82bf17681b374fbb97400",
                          "typeString": "literal_string \" votre animal n'est pas inscrit dans le registre de combat\""
                        }
                      ],
                      "id": 726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2004,
                        2005
                      ],
                      "referencedDeclaration": 2005,
                      "src": "1192:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1192:116:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:116:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 736,
                          "name": "_registerFighting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1322:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                            "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                          }
                        },
                        "id": 738,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 737,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 711,
                          "src": "1340:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1322:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                          "typeString": "struct Animals.Foofighter storage ref"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "1322:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 740,
                          "name": "_registerFighting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1358:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                            "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                          }
                        },
                        "id": 742,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 741,
                          "name": "adverssaire",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 713,
                          "src": "1376:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1358:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                          "typeString": "struct Animals.Foofighter storage ref"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "1358:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1322:72:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 756,
                  "nodeType": "IfStatement",
                  "src": "1319:282:1",
                  "trueBody": {
                    "id": 755,
                    "nodeType": "Block",
                    "src": "1395:206:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 746,
                                    "name": "_registerFighting",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 115,
                                    "src": "1418:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Foofighter_$82_storage_$",
                                      "typeString": "mapping(uint256 => struct Animals.Foofighter storage ref)"
                                    }
                                  },
                                  "id": 748,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 747,
                                    "name": "adverssaire",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 713,
                                    "src": "1436:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1418:30:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Foofighter_$82_storage",
                                    "typeString": "struct Animals.Foofighter storage ref"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "peutcombattre",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "1418:44:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1464:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1418:50:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "766f7573206e6520706f7576657a2070617320666169726520636f6d62617474726520756e20616e696d616c20717569206e2765737420706173206c6520766f747265",
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1469:69:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                                "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                              },
                              "value": "vous ne pouvez pas faire combattre un animal qui n'est pas le votre"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a8864e8531d9b3883b600897a68982694edc945ecba4806b21daa584d2cd87dd",
                                "typeString": "literal_string \"vous ne pouvez pas faire combattre un animal qui n'est pas le votre\""
                              }
                            ],
                            "id": 745,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2004,
                              2005
                            ],
                            "referencedDeclaration": 2005,
                            "src": "1410:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1410:129:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 754,
                        "nodeType": "ExpressionStatement",
                        "src": "1410:129:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ToFight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1013:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "name": "adverssaire",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1030:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:38:1"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:1"
            },
            "scope": 759,
            "src": "996:612:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 760,
        "src": "56:1557:1"
      }
    ],
    "src": "0:1613:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.3",
  "updatedAt": "2019-03-21T03:15:44.884Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}